{"version":3,"sources":["logo.svg","components/TypeWriter.tsx","components/NavBar.tsx","components/Menu.tsx","App.js","reportWebVitals.js","index.js"],"names":["TypeWriter","options","strings","autoStart","loop","NavBar","className","to","Menu","useState","open","setOpen","sideBarStyle","width","style","position","textAlign","margin","right","onClick","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAAe,I,oCCEFA,EAAa,WACtB,OACE,cAAC,IAAD,CACEC,QAAS,CACPC,QAAS,CAAC,QAAS,SACnBC,WAAW,EACXC,MAAM,MCNHC,G,MAAS,WAClB,OACI,qBAAIC,UAAU,YAAd,UACI,oBAAIA,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMC,GAAG,SAAT,qBACrB,oBAAID,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMC,GAAG,QAAT,0BACrB,oBAAID,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMC,GAAG,YAAT,wBACrB,oBAAID,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAMC,GAAG,WAAT,4B,QCJpBC,G,MAAO,WAChB,MAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,CACjBC,MAAQH,EAAO,QAAU,QAE7B,OACI,sBAAKJ,UAAS,UAAaQ,MAAOF,EAAlC,UACI,wBACIN,UAAU,aACVQ,MAAOJ,EAAO,GAAI,CAACK,SAAS,WAAYC,UAAU,SAAUC,OAAO,EAAGC,MAAO,GAC7EC,QACI,kBAAIR,GAASD,IAJrB,SAOKA,EAAQ,4CAAiB,gDAE7BA,EACG,qBAAIJ,UAAU,QAAd,UACI,6BAAI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,QAAT,0BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,wBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,WAAT,0BAER,UCnBHa,EAAM,WACjB,OACE,qBAAKd,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,eAAC,IAAD,CAAOe,OAAK,EAACC,KAAO,IAApB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOA,KAAO,SAAd,SACE,gDCTKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b3d33bec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import Typewriter from 'typewriter-effect';\r\n\r\nexport const TypeWriter = () => {\r\n    return(\r\n      <Typewriter\r\n        options={{\r\n          strings: ['Hello', 'World'],\r\n          autoStart: true,\r\n          loop: true,\r\n        }}\r\n      />\r\n    )\r\n} ","import './NavBar.css'\r\nimport { Link } from 'react-router-dom'\r\nexport const NavBar = () =>{\r\n    return (\r\n        <ul className=\"container\">\r\n            <li className=\"item\"><Link to=\"/about\">About</Link></li>\r\n            <li className=\"item\"><Link to=\"/work\">Experience</Link></li>\r\n            <li className=\"item\"><Link to=\"/projects\">Projects</Link></li>\r\n            <li className=\"item\"><Link to=\"/contact\">Contact</Link></li>\r\n        </ul>\r\n    )\r\n}","import React, { useState } from \"react\";\r\nimport './Menu.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Menu = () => {\r\n    const [open, setOpen] = useState(true)\r\n    const sideBarStyle = {\r\n        width : open ? '250px' : '50px'\r\n    }\r\n    return (\r\n        <div className={`sidebar`} style={sideBarStyle}>\r\n            <button \r\n                className=\"controlBtn\"\r\n                style={open ? {}: {position:'relative', textAlign:'center', margin:0, right: 0}}\r\n                onClick={\r\n                    ()=>setOpen(!open)\r\n                }\r\n            >\r\n                {open ? (<>&times;</>) : (<>&#9776;</>)}\r\n            </button>\r\n            {open ? (\r\n                <ul className=\"items\">\r\n                    <li><Link to=\"/\">Home</Link></li>\r\n                    <li><Link to=\"/about\">About</Link></li>\r\n                    <li><Link to=\"/work\">Experience</Link></li>\r\n                    <li><Link to=\"/projects\">Projects</Link></li>\r\n                    <li><Link to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n            ) : null\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport { \n  Route,\n  Switch\n} from 'react-router-dom'\nimport { TypeWriter } from './components/TypeWriter'\nimport { NavBar, Menu } from './components';\nexport const App = () => {\n  return(\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Menu></Menu>\n\n      <Switch>\n        <Route exact path = \"/\">\n          <NavBar/>\n          <TypeWriter/>\n        </Route>\n        <Route path = \"/about\">\n          <p>Home</p>\n        </Route>\n      </Switch>\n      </header>\n    </div>\n  )\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}